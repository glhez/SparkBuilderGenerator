package com.helospark.testpackage;

public class TestClass extends TestSuperClass {
    private String childField;

    private TestClass(Builder builder) {
        this.publicSuperSuperClassField = builder.publicSuperSuperClassField;
        this.protectedSuperSuperClassField = builder.protectedSuperSuperClassField;
        this.publicSuperClassField = builder.publicSuperClassField;
        this.defaultSuperClassField = builder.defaultSuperClassField;
        this.protectedSuperClassField = builder.protectedSuperClassField;
        this.childField = builder.childField;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static final class Builder {
        private String publicSuperSuperClassField;
        private String protectedSuperSuperClassField;
        private String publicSuperClassField;
        private String defaultSuperClassField;
        private String protectedSuperClassField;
        private String childField;

        private Builder() {
        }

        public Builder withPublicSuperSuperClassField(String publicSuperSuperClassField) {
            this.publicSuperSuperClassField = publicSuperSuperClassField;
            return this;
        }

        public Builder withProtectedSuperSuperClassField(String protectedSuperSuperClassField) {
            this.protectedSuperSuperClassField = protectedSuperSuperClassField;
            return this;
        }

        public Builder withPublicSuperClassField(String publicSuperClassField) {
            this.publicSuperClassField = publicSuperClassField;
            return this;
        }

        public Builder withDefaultSuperClassField(String defaultSuperClassField) {
            this.defaultSuperClassField = defaultSuperClassField;
            return this;
        }

        public Builder withProtectedSuperClassField(String protectedSuperClassField) {
            this.protectedSuperClassField = protectedSuperClassField;
            return this;
        }

        public Builder withChildField(String childField) {
            this.childField = childField;
            return this;
        }

        public TestClass build() {
            return new TestClass(this);
        }
    }
}