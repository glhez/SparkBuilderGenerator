public class EmailMessage {
    private String from;
    private String to;

    private EmailMessage(Builder builder) {
        this.from = builder.from;
        this.to = builder.to;
    }

    public EmailMessage() {
    }

    public static IFromStage builder() {
        return new Builder();
    }

    public interface IFromStage {
        public IToStage withFrom(String from);
    }

    public interface IToStage {
        public IBuildStage withTo(String to);
    }

    public interface IBuildStage {
        public EmailMessage build();
    }

    public static final class Builder implements IFromStage, IToStage, IBuildStage {
        private String from;
        private String to;

        private Builder() {
        }

        @Override
        public IToStage withFrom(String from) {
            this.from = from;
            return this;
        }

        @Override
        public IBuildStage withTo(String to) {
            this.to = to;
            return this;
        }

        @Override
        public EmailMessage build() {
            return new EmailMessage(this);
        }
    }
}